<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<title>MongoSPY</title>
	<link rel="stylesheet" type="text/css" href="/styles/semantic.min.css">
	
	<script src="/javascripts/jquery.min.js"></script>
	<script src="/javascripts/semantic.min.js"></script>
	
	<script src="/socket.io/socket.io.js"></script>
	<script src="http://code.highcharts.com/highcharts.js"></script>
	<script src="http://code.highcharts.com/modules/exporting.js"></script>

	<script type="text/javascript">


	
	$(function() {


		var socket = io.connect('http://localhost:8080');


		$("#server_connect").click(function() {
			socket.emit('connect', $("#server_host").val(), $("#server_port").val() )
		})

		socket.on('serverStatus', function (data) {
			//console.log(data)
			var a = $('#container').highcharts()
			a.series[0].addPoint([(new Date()).getTime(),   data.connections.current ],true,true)
		});

		socket.on('inprog', function(data) {
			
			var html = "";			

			data.inprog.forEach(function(op) {

				if (op.active == true) {
					html += "<tr>";
				    html += "  <td>"+op.ns+"</td>";
				    html += "  <td>"+JSON.stringify(op.query)+"</td>";
				    html += "  <td>"+op.secs_running+"</td>";
				    html += "</tr>";
				}

			});


			$("#inprog").html(html);

		});

		socket.on('current', function (data) {
			console.log('current',data)
		});


		Highcharts.setOptions({
            global: {
                useUTC: false
            }
        });
    
        var chart;
        $('#container').highcharts({
            chart: {
                type: 'spline',
                animation: Highcharts.svg, // don't animate in old IE
                marginRight: 10,
                events: {
                    load: function() {
    
                        // // set up the updating of the chart each second
                        // var series = this.series[0];
                        // setInterval(function() {
                        //     var x = (new Date()).getTime(), // current time
                        //         y = Math.random();
                        //     series.addPoint([x, y], true, true);
                        // }, 1000);
                    }
                }
            },
            title: {
                text: 'Live random data'
            },
            xAxis: {
                type: 'datetime',
                tickPixelInterval: 150
            },
            yAxis: {
                title: {
                    text: 'Value'
                },
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#808080'
                }]
            },
            tooltip: {
                formatter: function() {
                        return '<b>'+ this.series.name +'</b><br/>'+
                        Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) +'<br/>'+
                        Highcharts.numberFormat(this.y, 2);
                }
            },
            legend: {
                enabled: false
            },
            exporting: {
                enabled: false
            },
            series: [{
                name: 'Random data',
                data: (function() {
                    // generate an array of random data
                    // var data = [],
                    //     time = (new Date()).getTime(),
                    //     i;
    
                    // for (i = -19; i <= 0; i++) {
                    //     data.push({
                    //         x: time + i * 1000,
                    //         y: Math.random()
                    //     });
                    // }
                    // console.log('data')
                    // return data;

                    var data = [],
                    time = (new Date()).getTime(),
                    i;

	                for (i = -19; i <= 0; i++) {
	                    data.push({
	                        // x: 1,
	                        // y: 1
	                    });
	                }

                    return data;
                })()
            }]
        });

	})

	</script>
</head>
<body>
	<div class="ui grid">
		<div class="eight wide column">
			<div class="ui form">
				<div class="inline fields">
					<div class="field">
						<input type="text"  id="server_host" value="127.0.0.1" placeholder="127.0.0.1" />
					</div>
					<div class="field">
						<input type="text" id="server_port" value="27017" placeholder="27017" />
					</div>
					<div class="field">
						<button class="ui button" id="server_connect">Connect</button>
					</div>
				</div>
			</div>


			<table class="ui sortable table segment">
			  <thead>
			    <tr>
			    	<th>NS</th>
			    	<th>Query</th>
			    	<th>Sec</th>
			  	</tr>
			  </thead>
			  <tbody id="inprog">
			    
			    
			  </tbody>
			  <tfoot>
			    </tfoot>
			</table>




















		</div>
		
		<div class="eight wide column">
			<div id="container" style="width: 310px; height: 200px; margin: 0 auto"></div>
		</div>
	</div>
</body>
</html>